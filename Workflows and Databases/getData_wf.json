{
  "name": "My workflow 3",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -420,
        760
      ],
      "id": "65fff40f-2103-4803-bd16-4ea375cb1717",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "url": "https://maps.googleapis.com/maps/api/place/details/json",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "place_id",
              "value": "={{ $json.place_id }}"
            },
            {
              "name": "fields",
              "value": "formatted_phone_number,international_phone_number,reviews(author_name,text,rating)"
            },
            {
              "name": "key",
              "value": "AIzaSyD26SBDx0y_zVHM30FGrC0BiQm6RrJwpmM"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        720,
        60
      ],
      "id": "9fb35a37-a79b-4cf5-aa3c-a2613cba6884",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "url": "https://maps.googleapis.com/maps/api/place/textsearch/json",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "chinese restaurant Antananarivo"
            },
            {
              "name": "key",
              "value": "AIzaSyD26SBDx0y_zVHM30FGrC0BiQm6RrJwpmM"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -460,
        400
      ],
      "id": "17322f7e-f06e-4616-b809-2a6a846aa134",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {
          "clashHandling": {
            "values": {
              "resolveClash": "addSuffix"
            }
          },
          "includeUnpaired": true
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        880,
        360
      ],
      "id": "9d79dd7c-18d5-43b8-9e3e-7ffc251e3de2",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2f33bc12-d94c-41c2-b9c5-cce9c498f398",
              "name": "formated_phone_number",
              "value": "={{ $json.formated_phone_number_1 }}",
              "type": "string"
            },
            {
              "id": "1c9aaba6-0ce0-4c0d-9d9c-a72feef51e57",
              "name": "international_phone_number",
              "value": "={{ $json.international_phone_number_1 }}",
              "type": "string"
            },
            {
              "id": "5eb631b9-cd3f-4fa5-bdce-478963856a83",
              "name": "all_text",
              "value": "={{ $json.all_text_1 }}",
              "type": "string"
            },
            {
              "id": "da098746-06df-4b9d-8b4a-c76620fdbe89",
              "name": "all_rating",
              "value": "={{ $json.all_rating_1 }}",
              "type": "string"
            },
            {
              "id": "39d23878-8978-4159-8ecc-63ec5732f963",
              "name": "name",
              "value": "={{ $json.name_2 }}",
              "type": "string"
            },
            {
              "id": "9bceaa1e-9c9f-4b1f-915e-67813d562a88",
              "name": "latitude",
              "value": "={{ $json.latitude_2 }}",
              "type": "number"
            },
            {
              "id": "838a74a7-f047-438a-8d24-6fb6f7aedfec",
              "name": "longitude",
              "value": "={{ $json.longitude_2 }}",
              "type": "number"
            },
            {
              "id": "abe75f0c-bb4d-40af-94d0-50fa90fe2703",
              "name": "vicinity",
              "value": "={{ $json.vicinity_2 }}",
              "type": "string"
            },
            {
              "id": "af8c3284-7c5a-4f63-9dc0-bd84ed588760",
              "name": "photo",
              "value": "={{ $json.photo_2 }}",
              "type": "string"
            },
            {
              "id": "93146f75-5e64-47a6-80d1-536b96b7a806",
              "name": "place_id",
              "value": "={{ $json.place_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        300,
        380
      ],
      "id": "b963eeb7-a5f7-4e17-a9ad-4b55d63b59c2",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=restaurantDB.json",
        "options": {
          "append": false
        }
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        440,
        120
      ],
      "id": "1c0f21c2-d500-499d-998b-e62507f98d4d",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "jsCode": "// Combiner tous les restaurants de tous les items\nconst allRestaurants = items\n  .flatMap(item => item.json.results || [])\n  .map(restaurant => ({\n    json: {\n      name: restaurant.name || \"Nom inconnu\",\n      latitude: restaurant.geometry?.location?.lat || 0,\n      longitude: restaurant.geometry?.location?.lng || 0,\n      vicinity: restaurant.formatted_address || \"Adresse inconnue\",\n      photo: restaurant.photos?.[0]?.photo_reference \n        ? `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=${restaurant.photos[0].photo_reference}&key=VOTRE_CLE_API`\n        : \"Pas de photo disponible\",\n      place_id: restaurant.place_id || \"\", // Conserver le place_id\n    }\n  }));\n\nreturn allRestaurants;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -280,
        280
      ],
      "id": "6a8ecf47-4447-4df3-adc6-cee067932011",
      "name": "Code"
    },
    {
      "parameters": {
        "url": "https://maps.googleapis.com/maps/api/place/textsearch/json",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "pagetoken",
              "value": "={{ $json.next_page_token }}"
            },
            {
              "name": "key",
              "value": "AIzaSyD26SBDx0y_zVHM30FGrC0BiQm6RrJwpmM"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        120,
        60
      ],
      "id": "553961d9-8da9-4104-b85f-f342e445ed23",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "// Combiner tous les restaurants de tous les items\nconst allRestaurants = items\n  .flatMap(item => item.json.results || [])\n  .map(restaurant => ({\n    json: {\n      name: restaurant.name || \"Nom inconnu\",\n      latitude: restaurant.geometry?.location?.lat || 0,\n      longitude: restaurant.geometry?.location?.lng || 0,\n      vicinity: restaurant.formatted_address || \"Adresse inconnue\",\n      photo: restaurant.photos?.[0]?.photo_reference \n        ? `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=${restaurant.photos[0].photo_reference}&key=VOTRE_CLE_API`\n        : \"Pas de photo disponible\",\n      place_id: restaurant.place_id || \"\", // Conserver le place_id\n    }\n  }));\n\nreturn allRestaurants;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -140,
        680
      ],
      "id": "a1b9d9bd-94c2-470d-8c77-2aab696a5707",
      "name": "Code3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        260,
        580
      ],
      "id": "82a6797d-5289-4aba-ba8f-1476e0abbfdc",
      "name": "Merge1"
    },
    {
      "parameters": {
        "url": "https://maps.googleapis.com/maps/api/place/textsearch/json",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "pagetoken",
              "value": "={{ $json.next_page_token }}"
            },
            {
              "name": "key",
              "value": "AIzaSyD26SBDx0y_zVHM30FGrC0BiQm6RrJwpmM"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -440,
        -120
      ],
      "id": "d672ab5a-2bc7-4486-ad43-bf55ee54cc12",
      "name": "HTTP Request3"
    },
    {
      "parameters": {
        "jsCode": "// Combiner tous les restaurants de tous les items\nconst allRestaurants = items\n  .flatMap(item => item.json.results || [])\n  .map(restaurant => ({\n    json: {\n      name: restaurant.name || \"Nom inconnu\",\n      latitude: restaurant.geometry?.location?.lat || 0,\n      longitude: restaurant.geometry?.location?.lng || 0,\n      vicinity: restaurant.formatted_address || \"Adresse inconnue\",\n      photo: restaurant.photos?.[0]?.photo_reference \n        ? `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photo_reference=${restaurant.photos[0].photo_reference}&key=VOTRE_CLE_API`\n        : \"Pas de photo disponible\",\n      place_id: restaurant.place_id || \"\", // Conserver le place_id\n    }\n  }));\n\nreturn allRestaurants;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        20,
        300
      ],
      "id": "0376586f-fbcb-4df8-b788-bc8f6d15fcd4",
      "name": "Code4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        500,
        300
      ],
      "id": "8a567f49-b6e0-490f-a09e-a3bce3b6ba51",
      "name": "Merge2"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const result = item.json.result || {};\n  const formated_phone_number = result.formatted_phone_number || 'Non disponible';\n  const international_phone_number = result.international_phone_number || \"Non disponible\";\n  const reviews = result.reviews || [];\n  \n  // Regrouper les auteurs\n  const all_authors = reviews\n    .map(review => review.author_name)\n    .filter(Boolean)\n    .join(', ');\n  \n  // Regrouper les textes des commentaires\n  const all_text = reviews\n    .map(review => review.text)\n    .filter(Boolean)\n    .join('. ');\n  \n  const all_rating = reviews\n    .map(review => review.rating)\n    .filter(Boolean)\n    .join('. ');\n  \n  return {\n    json: {\n      formated_phone_number,\n  international_phone_number,\n      all_authors,\n      all_text,\n      all_rating\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        980,
        100
      ],
      "id": "84016880-e8ee-41a2-a741-e9ce3f01111c",
      "name": "Code5"
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        640,
        440
      ],
      "id": "ea845d22-353d-4ab6-a5ca-a1ab57d5e5f4",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7d05774c-c2b4-4d75-b24f-790b9b0d0c39",
              "leftValue": "={{ $json.next_page_token }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        40,
        -120
      ],
      "id": "8a8e1e2b-e065-4881-bc72-e2774c3617ff",
      "name": "condition(s)"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f7886e57-8ccc-4881-947a-c9a973e05920",
              "leftValue": "={{ $json.next_page_token }}",
              "rightValue": "=",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -560,
        140
      ],
      "id": "a8b8b807-5e00-4f24-97eb-5d7966deaf05",
      "name": "go to next one"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          },
          {
            "node": "go to next one",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          },
          {
            "node": "condition(s)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "condition(s)": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "go to next one": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "34467ecb-b5db-41f4-9d32-fcb6d926f424",
  "meta": {
    "instanceId": "8e64c042c4170cdbeee1c99283b41c0c131eb8bcceb620d19f4021955291963c"
  },
  "id": "fRR4vYvaaWvP7DPf",
  "tags": []
}